name: CI checks

on:
  push:
permissions:
  pull-requests: write
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
  playwright-tests:
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm i

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Next.js cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build app
        run: npm run build

      - name: Run Playwright tests
        id: run-tests
        run: npm run test:ci

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: failure() && steps.run-tests.conclusion == 'failure'
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 3

      - name: Update screenshots in visual tests
        id: run-tests-update
        if: failure() && steps.run-tests.conclusion == 'failure'
        run: npm run test:update-snapshots

      - name: Upload updated Playwright screenshots
        uses: actions/upload-artifact@v3
        if: failure() && steps.run-tests-update.conclusion == 'success'
        with:
          name: playwright-screenshots-updated
          path: e2e/__screenshots__/**/*.png
          retention-days: 3
  dependabot-auto-approve-and-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - uses: actions/checkout@v4
      - name: Get Pull Request Number
        run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Approve and Merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash .github/approve-and-merge.sh $GITHUB_TOKEN ${{ steps.pr.outputs.pull_request_number }}
